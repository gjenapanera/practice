<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- Enable autowiring -->
	<context:component-scan base-package="com.mgm.dmp" />
	<aop:aspectj-autoproxy />
	<import resource="snp-rest-config-context.xml"/>
	<import resource="phoenix-rest-config-context.xml"/>
	<import resource="cam-jms-beans.xml"/>

	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>#{T(com.mgm.dmp.common.util.EnvironmentConfigUtil).getEnvSpecificFile('classpath:environment/log4j-{env}.properties', 'classpath:config/log4j.properties')}</value>
			</list>
		</property>
	</bean>
	 
 	<bean class="com.mgm.dmp.common.util.ApplicationPropertyUtil">
		<property name="locations">
			<list>
				<value>classpath:config/mgm-web-common.properties</value>
				<value>#{T(com.mgm.dmp.common.util.EnvironmentConfigUtil).getEnvSpecificFile('classpath:environment/mgm-web-{env}.properties', 'classpath:config/mgm-web-dev.properties')}</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.tiles2.TilesViewResolver"/>
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="executorService" class="java.util.concurrent.ScheduledThreadPoolExecutor" >
		<constructor-arg value="${cache.loader.core.thread.pool.size}"/>
	</bean>	
	
	<bean id="threadPoolExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
		<property name="corePoolSize" value="${thread.executor.core.pool.size}" />
		<property name="maxPoolSize" value="${thread.executor.max.pool.size}" />
		<property name="waitForTasksToCompleteOnShutdown" value="${thread.executor.wait.execution.completion}" />
	</bean>	
	
	<cache:annotation-driven />
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cacheManager-ref="ehcache"/>
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:configLocation="classpath:ehcache-config.xml"/>
</beans>